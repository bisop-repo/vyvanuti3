
R version 4.1.3 (2022-03-10) -- "One Push-Up"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!/usr/bin/env Rscript
> ##1. Initiating procedure
> #1.1 Parsing args (use the commented command below for inputing them wihout console run)
> args = commandArgs(trailingOnly=TRUE) #args = c("data/temp/IOmicron.csv","I","temp.txt")
> print(args)
[1] "../data/temp/FebOmicron60.csv"           
[2] "VI"                                      
[3] "outputs/FebOmicron60//convertool_log.txt"
> 
> #1.2 Loading libraries
>   library(survival)
>   library(survminer)
>   library(ggplot2)
>   library(data.table)
>   library(vtable)
>   library(xtable)
> 
> #1.3 Saving various useful data
>   systeminfo = Sys.info()
>   user = as.character(systeminfo['login'])
>   computer = as.character(systeminfo['nodename'])
>   time.start = as.character(Sys.time())
>   
>   ptime = gsub(" ","_",time.start)
>   ptime = gsub(":","-",ptime)
>   
>   print(paste("Hello ",user," of ",computer,", it is ",time.start,".",sep=""))
[1] "Hello smid of daman.utia.cas.cz, it is 2023-02-03 12:24:54."
> 
> #1.4 Checking the provided arguments. The following if-else goes through the whole script and stops if requested args are not provided.
>   if(length(args) > 1){
+     print("Inputs have been provided.")
+     data.input = args[1]
+     data.input.events = paste(args[1],"events.csv",sep=".")
+     f.input.id = args[2]
+     cox.f = fread("cox/cox_estimation_formulas.txt",stringsAsFactors = FALSE)
+     f.input = noquote(as.character(cox.f[cox.f$ID == f.input.id,2]))
+ 
+     print(paste("I am using file: ",data.input,sep=""))
+     print(paste("...and Cox formula: ",f.input,sep=""))   
+     
+     if(length(args)>2){
+       print("I can see a convertool log provided.")
+       convertool.log.location = args[3]
+       convertool.log = read.delim(convertool.log.location, header = FALSE, sep = "\t", dec = ".")
+       names(convertool.log) = "record"
+       convertool.vignette = convertool.log[1:7,]
+     } else {
+       print("No Convertool log has been provided.")
+       convertool.log = NA
+       convertool.vignette = NA
+     }
+     
+   ##2. Modeling procedure
+     
+   #2.1 Data loading and initial processing
+   mtab = fread(data.input,stringsAsFactors = FALSE)
+   mtab.events = fread(data.input.events,stringsAsFactors = FALSE)
+   file.name = strsplit(data.input,"/")[[1]]
+   file.name = gsub(".csv","",file.name[length(file.name)])
+   
+   mtab[, LastVaccTime := as.integer(LastVaccTime)][LastVaccTime == "_none", LastVaccTime := NULL]
+   mtab[, InfPriorTime := as.integer(InfPriorTime)][InfPriorTime == "_none", InfPriorTime := NULL]
+   
+   mtab.events[, LastVaccTime := as.integer(LastVaccTime)][LastVaccTime == "_none", LastVaccTime := NULL]
+   mtab.events[, InfPriorTime := as.integer(InfPriorTime)][InfPriorTime == "_none", InfPriorTime := NULL]
+   
+   #2.2 Preparing output directory
+   dir.name = file.name
+   dir.name = paste("outputs/",dir.name,sep="")
+   paste("The model files will be stored in: ",dir.name,"/",sep="")
+   if(file.exists(dir.name)){
+     print("The directory already exists, files will be rewritten.")
+     } else {
+     dir.create(dir.name)
+     print("The directory has been created.")
+ }
+  
+ #2.3. Switching to output directory, saving input file's descriptive stats
+   st(mtab,out='csv',file=paste(dir.name,'input_summary.csv',sep="/"))
+ 
+   custom.dq = list()
+   
+   VaccStatus_medians = mtab[mtab$T1 == 0,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(VaccStatus)]
+   custom.dq[["Median stats for VaccStatus at T1 == 0"]] = VaccStatus_medians
+   
+ #  Immunity_medians = mtab[mtab$T1 == 0,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(Immunity)]
+ #  custom.dq[["Median stats for Immunity at T1 == 0"]] = Immunity_medians
+   
+   VaccStatus_medians_events = mtab.events[,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(VaccStatus)]
+   custom.dq[["Median stats for VaccStatus at the respective T"]] = VaccStatus_medians_events
+   
+ #  Immunity_medians_events = mtab.events[,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(Immunity)]
+ #  custom.dq[["Median stats for Immunity at the respective T"]] = Immunity_medians_events
+   
+   sink(paste(dir.name,"input_summary_custom.txt",sep="/"))
+   print(custom.dq)
+   sink()  
+   gc()
+ 
+   print("The input file has been loaded, its properties have been saved. Proceeding to Cox model.")
+   
+   
+   
+ #2.4 Cox model estimation
+   f.input = as.formula(f.input)
+ #  cox = eval(bquote(coxph(.(f.input),data=mtab,cluster=Subject)))
+ #  cox = eval(bquote(coxph(.(f.input),data=mtab,robust=FALSE,control=coxph.control(iter.max = 100))))
+   cox = eval(bquote(coxph(.(f.input),data=mtab)))
+ 
+   cox.summary = summary(cox) 
+   print(cox.summary) # returns output to the console
+ 
+   ##3. Model outputs generation
+   #3.1 Hazard ratio plot
+   ggforest(cox, data = data.frame(mtab), fontsize = 1)
+   ggsave(paste(dir.name,"cox_risks_log.jpg",sep="/"),units="px",width=3840,height=3840)
+   print("Model charts have been generated.")
+   
+   #3.2 Txt (model summary)
+   sink(paste(dir.name,"cox_output.txt",sep="/"))
+   print(cox.summary)
+   sink()  
+   gc()
+   print("Model output has been saved (TXT).")
+ 
+   #3.2 TeX (params and exp(params))
+   beta <- coef(cox)
+   se   <- sqrt(diag(cox$var))
+   p    <- 1 - pchisq((beta/se)^2, 1)
+   CI   <- round(confint(cox), 3)
+   res <- data.frame(beta, se = se, CI, p)
+   names(res)[3:4] = c("low","high")
+   res$model.betas = paste(round(res$beta,2)," (",round(res$low,2),", ",round(res$high,2),")",sep="")
+   
+   res$hr = exp(res$beta)
+   res$hr.se = exp(res$se)
+   res$hr.low = exp(res$low)
+   res$hr.high = exp(res$high)
+   res$model.hr = paste(round(res$hr,2)," (",round(res$hr.low,2),", ",round(res$hr.high,2),")",sep="")
+   
+   res$eff = 1-res$hr
+   res$eff.high = 1-res$hr.low
+   res$eff.low = 1-res$hr.high
+   res$model.effectiveness = paste(round(res$eff,2)," (",round(res$eff.low,2),", ",round(res$eff.high,2),")",sep="")
+ 
+   modtab = res[,c("model.betas","model.hr","model.effectiveness")]
+   names(modtab) = c("Beta","HR","1-HR")
+   print(xtable(modtab),include.rownames=TRUE,file = paste(dir.name,"cox_output.tex",sep="/"), compress = FALSE)
+   print("Model output has been saved (TeX).")  
+   
+   #4. Closing sequence
+   time.end = as.character(Sys.time())
+   model.spent = difftime(time.end,time.start)
+   print("The procedure is finished in following time:")
+   print(model.spent)
+   
+   #4.1 Saving model run stats
+   run.overview = list()
+   run.overview[["user"]] = user
+   run.overview[["computer"]] = computer
+   run.overview[["arguments"]] = args
+   run.overview[["time.start"]] = time.start
+   run.overview[["time.end"]] = time.end
+   run.overview[["model.spent"]] = model.spent
+   run.overview[["model.concordance"]] = cox$concordance['concordance']
+   run.overview[["convertool.vignette"]] = convertool.vignette
+   
+   res$model.concordance = run.overview[["model.concordance"]]
+   res$model.ctool.version = run.overview[["convertool.vignette"]][1]
+   res$model.age.filter = run.overview[["convertool.vignette"]][4]
+   res$model.input.file = run.overview[["convertool.vignette"]][7]
+   res$model.input.horizon = run.overview[["convertool.vignette"]][5]
+   res$model.mode = f.input.id
+   res$model.calculated.at = time.end
+   
+   write.csv(res,file=paste(dir.name,"model_data.csv",sep="/"),row.names=FALSE)
+ 
+   sink(paste(dir.name,"model_run_overview.txt",sep="/"))
+   print(run.overview)
+   sink()
+ 
+   #4.2 Saving environment image (without the most heavy items)
+   rm(mtab,cox)
+   save(list=ls(), file=paste(dir.name,"environment.Rdata",sep="/"),compress=TRUE,compression_level=9)
+   print("Workspace image and log have been saved.")
+   print("https://www.youtube.com/watch?v=g3ENX3aHlqU")
+   
+   } else {
+     stop("Data input has not been provided, goodbye")
+     print(data.input)
+   }
[1] "Inputs have been provided."
[1] "I am using file: ../data/temp/FebOmicron60.csv"
[1] "...and Cox formula: Surv(T1,T2,Infected) ~ InfPrior + VaccStatus + AgeGr + Sex"
[1] "I can see a convertool log provided."
[1] "The directory already exists, files will be rewritten."
[1] "The input file has been loaded, its properties have been saved. Proceeding to Cox model."
Call:
coxph(formula = Surv(T1, T2, Infected) ~ InfPrior + VaccStatus + 
    AgeGr + Sex, data = mtab)

  n= 2926609, number of events= 59092 

                                coef  exp(coef)   se(coef)       z Pr(>|z|)    
InfPriorinf_NA_001-060    -7.4338452  0.0005909  0.5773761 -12.875  < 2e-16 ***
InfPriorinf_NA_061-121    -1.5951348  0.2028812  0.0565227 -28.221  < 2e-16 ***
InfPriorinf_NA_122-182    -1.6717042  0.1879265  0.1667703 -10.024  < 2e-16 ***
InfPriorinf_NA_183-243    -2.5505937  0.0780353  0.1112868 -22.919  < 2e-16 ***
InfPriorinf_NA_244-304    -2.0282145  0.1315702  0.0520718 -38.950  < 2e-16 ***
InfPriorinf_NA_305+       -0.9678371  0.3799038  0.0195969 -49.387  < 2e-16 ***
VaccStatusboost_001-061   -1.4379982  0.2374025  0.0232509 -61.847  < 2e-16 ***
VaccStatusboost_062-122   -0.9022102  0.4056720  0.0485675 -18.576  < 2e-16 ***
VaccStatusboost_123+      -0.3232929  0.7237618  1.0001392  -0.323    0.747    
VaccStatusfull_001-061    -1.2775541  0.2787182  0.0270949 -47.151  < 2e-16 ***
VaccStatusfull_062-122    -1.1822914  0.3065755  0.0161951 -73.003  < 2e-16 ***
VaccStatusfull_123-183    -0.5877516  0.5555750  0.0121566 -48.348  < 2e-16 ***
VaccStatusfull_184+       -0.2935630  0.7456022  0.0182619 -16.075  < 2e-16 ***
VaccStatuspartial_001-061 -0.9408575  0.3902930  0.0436624 -21.548  < 2e-16 ***
VaccStatuspartial_062+    -0.5898532  0.5544086  0.0824663  -7.153 8.51e-13 ***
AgeGr0-11                 -0.6212537  0.5372704  0.0173032 -35.904  < 2e-16 ***
AgeGr12-15                 0.3301631  1.3911950  0.0191386  17.251  < 2e-16 ***
AgeGr16-17                 0.3935526  1.4822373  0.0253749  15.510  < 2e-16 ***
AgeGr18-24                 0.0462586  1.0473452  0.0193891   2.386    0.017 *  
AgeGr25-29                -0.2076164  0.8125187  0.0209789  -9.896  < 2e-16 ***
AgeGr30-34                -0.1440018  0.8658862  0.0198026  -7.272 3.55e-13 ***
AgeGr35-39                -0.0420116  0.9588587  0.0191139  -2.198    0.028 *  
AgeGr45-49                -0.0179429  0.9822171  0.0184734  -0.971    0.331    
AgeGr50-54                -0.2742151  0.7601685  0.0211697 -12.953  < 2e-16 ***
AgeGr55-59                -0.4858117  0.6151976  0.0228162 -21.292  < 2e-16 ***
AgeGr60-64                -0.7964894  0.4509092  0.0261782 -30.426  < 2e-16 ***
AgeGr65-69                -1.0756962  0.3410602  0.0283714 -37.915  < 2e-16 ***
AgeGr70-74                -1.2661162  0.2819244  0.0318294 -39.778  < 2e-16 ***
AgeGr75-79                -1.2387218  0.2897544  0.0371610 -33.334  < 2e-16 ***
AgeGr80+                  -1.3025731  0.2718314  0.0350900 -37.121  < 2e-16 ***
SexM                      -0.1185818  0.8881792  0.0082618 -14.353  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

                          exp(coef) exp(-coef) lower .95 upper .95
InfPriorinf_NA_001-060    0.0005909  1692.3023 0.0001906  0.001832
InfPriorinf_NA_061-121    0.2028812     4.9290 0.1816057  0.226649
InfPriorinf_NA_122-182    0.1879265     5.3212 0.1355292  0.260581
InfPriorinf_NA_183-243    0.0780353    12.8147 0.0627428  0.097055
InfPriorinf_NA_244-304    0.1315702     7.6005 0.1188048  0.145707
InfPriorinf_NA_305+       0.3799038     2.6322 0.3655887  0.394780
VaccStatusboost_001-061   0.2374025     4.2123 0.2268267  0.248471
VaccStatusboost_062-122   0.4056720     2.4650 0.3688369  0.446186
VaccStatusboost_123+      0.7237618     1.3817 0.1019238  5.139439
VaccStatusfull_001-061    0.2787182     3.5879 0.2643030  0.293920
VaccStatusfull_062-122    0.3065755     3.2618 0.2969970  0.316463
VaccStatusfull_123-183    0.5555750     1.7999 0.5424941  0.568971
VaccStatusfull_184+       0.7456022     1.3412 0.7193871  0.772773
VaccStatuspartial_001-061 0.3902930     2.5622 0.3582823  0.425164
VaccStatuspartial_062+    0.5544086     1.8037 0.4716660  0.651667
AgeGr0-11                 0.5372704     1.8613 0.5193551  0.555804
AgeGr12-15                1.3911950     0.7188 1.3399766  1.444371
AgeGr16-17                1.4822373     0.6747 1.4103229  1.557819
AgeGr18-24                1.0473452     0.9548 1.0082909  1.087912
AgeGr25-29                0.8125187     1.2307 0.7797871  0.846624
AgeGr30-34                0.8658862     1.1549 0.8329229  0.900154
AgeGr35-39                0.9588587     1.0429 0.9236018  0.995461
AgeGr45-49                0.9822171     1.0181 0.9472899  1.018432
AgeGr50-54                0.7601685     1.3155 0.7292732  0.792373
AgeGr55-59                0.6151976     1.6255 0.5882928  0.643333
AgeGr60-64                0.4509092     2.2177 0.4283573  0.474648
AgeGr65-69                0.3410602     2.9320 0.3226126  0.360563
AgeGr70-74                0.2819244     3.5470 0.2648741  0.300072
AgeGr75-79                0.2897544     3.4512 0.2694006  0.311646
AgeGr80+                  0.2718314     3.6788 0.2537646  0.291185
SexM                      0.8881792     1.1259 0.8739128  0.902678

Concordance= 0.723  (se = 0.001 )
Likelihood ratio test= 39643  on 31 df,   p=<2e-16
Wald test            = 27608  on 31 df,   p=<2e-16
Score (logrank) test = 34975  on 31 df,   p=<2e-16

[1] "Model charts have been generated."
[1] "Model output has been saved (TXT)."
[1] "Model output has been saved (TeX)."
[1] "The procedure is finished in following time:"
Time difference of 2.55 mins
[1] "Workspace image and log have been saved."
[1] "https://www.youtube.com/watch?v=g3ENX3aHlqU"
> 
