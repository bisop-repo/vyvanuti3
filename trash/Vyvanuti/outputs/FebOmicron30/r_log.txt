
R version 4.1.3 (2022-03-10) -- "One Push-Up"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!/usr/bin/env Rscript
> ##1. Initiating procedure
> #1.1 Parsing args (use the commented command below for inputing them wihout console run)
> args = commandArgs(trailingOnly=TRUE) #args = c("data/temp/IOmicron.csv","I","temp.txt")
> print(args)
[1] "../data/temp/FebOmicron30.csv"           
[2] "VI"                                      
[3] "outputs/FebOmicron30//convertool_log.txt"
> 
> #1.2 Loading libraries
>   library(survival)
>   library(survminer)
>   library(ggplot2)
>   library(data.table)
>   library(vtable)
>   library(xtable)
> 
> #1.3 Saving various useful data
>   systeminfo = Sys.info()
>   user = as.character(systeminfo['login'])
>   computer = as.character(systeminfo['nodename'])
>   time.start = as.character(Sys.time())
>   
>   ptime = gsub(" ","_",time.start)
>   ptime = gsub(":","-",ptime)
>   
>   print(paste("Hello ",user," of ",computer,", it is ",time.start,".",sep=""))
[1] "Hello smid of daman.utia.cas.cz, it is 2023-02-03 12:28:43."
> 
> #1.4 Checking the provided arguments. The following if-else goes through the whole script and stops if requested args are not provided.
>   if(length(args) > 1){
+     print("Inputs have been provided.")
+     data.input = args[1]
+     data.input.events = paste(args[1],"events.csv",sep=".")
+     f.input.id = args[2]
+     cox.f = fread("cox/cox_estimation_formulas.txt",stringsAsFactors = FALSE)
+     f.input = noquote(as.character(cox.f[cox.f$ID == f.input.id,2]))
+ 
+     print(paste("I am using file: ",data.input,sep=""))
+     print(paste("...and Cox formula: ",f.input,sep=""))   
+     
+     if(length(args)>2){
+       print("I can see a convertool log provided.")
+       convertool.log.location = args[3]
+       convertool.log = read.delim(convertool.log.location, header = FALSE, sep = "\t", dec = ".")
+       names(convertool.log) = "record"
+       convertool.vignette = convertool.log[1:7,]
+     } else {
+       print("No Convertool log has been provided.")
+       convertool.log = NA
+       convertool.vignette = NA
+     }
+     
+   ##2. Modeling procedure
+     
+   #2.1 Data loading and initial processing
+   mtab = fread(data.input,stringsAsFactors = FALSE)
+   mtab.events = fread(data.input.events,stringsAsFactors = FALSE)
+   file.name = strsplit(data.input,"/")[[1]]
+   file.name = gsub(".csv","",file.name[length(file.name)])
+   
+   mtab[, LastVaccTime := as.integer(LastVaccTime)][LastVaccTime == "_none", LastVaccTime := NULL]
+   mtab[, InfPriorTime := as.integer(InfPriorTime)][InfPriorTime == "_none", InfPriorTime := NULL]
+   
+   mtab.events[, LastVaccTime := as.integer(LastVaccTime)][LastVaccTime == "_none", LastVaccTime := NULL]
+   mtab.events[, InfPriorTime := as.integer(InfPriorTime)][InfPriorTime == "_none", InfPriorTime := NULL]
+   
+   #2.2 Preparing output directory
+   dir.name = file.name
+   dir.name = paste("outputs/",dir.name,sep="")
+   paste("The model files will be stored in: ",dir.name,"/",sep="")
+   if(file.exists(dir.name)){
+     print("The directory already exists, files will be rewritten.")
+     } else {
+     dir.create(dir.name)
+     print("The directory has been created.")
+ }
+  
+ #2.3. Switching to output directory, saving input file's descriptive stats
+   st(mtab,out='csv',file=paste(dir.name,'input_summary.csv',sep="/"))
+ 
+   custom.dq = list()
+   
+   VaccStatus_medians = mtab[mtab$T1 == 0,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(VaccStatus)]
+   custom.dq[["Median stats for VaccStatus at T1 == 0"]] = VaccStatus_medians
+   
+ #  Immunity_medians = mtab[mtab$T1 == 0,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(Immunity)]
+ #  custom.dq[["Median stats for Immunity at T1 == 0"]] = Immunity_medians
+   
+   VaccStatus_medians_events = mtab.events[,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(VaccStatus)]
+   custom.dq[["Median stats for VaccStatus at the respective T"]] = VaccStatus_medians_events
+   
+ #  Immunity_medians_events = mtab.events[,.(N=.N,age_median=median(Age),LastVaccTime_median=median(LastVaccTime),InfPriorTime_median=median(InfPriorTime)),.(Immunity)]
+ #  custom.dq[["Median stats for Immunity at the respective T"]] = Immunity_medians_events
+   
+   sink(paste(dir.name,"input_summary_custom.txt",sep="/"))
+   print(custom.dq)
+   sink()  
+   gc()
+ 
+   print("The input file has been loaded, its properties have been saved. Proceeding to Cox model.")
+   
+   
+   
+ #2.4 Cox model estimation
+   f.input = as.formula(f.input)
+ #  cox = eval(bquote(coxph(.(f.input),data=mtab,cluster=Subject)))
+ #  cox = eval(bquote(coxph(.(f.input),data=mtab,robust=FALSE,control=coxph.control(iter.max = 100))))
+   cox = eval(bquote(coxph(.(f.input),data=mtab)))
+ 
+   cox.summary = summary(cox) 
+   print(cox.summary) # returns output to the console
+ 
+   ##3. Model outputs generation
+   #3.1 Hazard ratio plot
+   ggforest(cox, data = data.frame(mtab), fontsize = 1)
+   ggsave(paste(dir.name,"cox_risks_log.jpg",sep="/"),units="px",width=3840,height=3840)
+   print("Model charts have been generated.")
+   
+   #3.2 Txt (model summary)
+   sink(paste(dir.name,"cox_output.txt",sep="/"))
+   print(cox.summary)
+   sink()  
+   gc()
+   print("Model output has been saved (TXT).")
+ 
+   #3.2 TeX (params and exp(params))
+   beta <- coef(cox)
+   se   <- sqrt(diag(cox$var))
+   p    <- 1 - pchisq((beta/se)^2, 1)
+   CI   <- round(confint(cox), 3)
+   res <- data.frame(beta, se = se, CI, p)
+   names(res)[3:4] = c("low","high")
+   res$model.betas = paste(round(res$beta,2)," (",round(res$low,2),", ",round(res$high,2),")",sep="")
+   
+   res$hr = exp(res$beta)
+   res$hr.se = exp(res$se)
+   res$hr.low = exp(res$low)
+   res$hr.high = exp(res$high)
+   res$model.hr = paste(round(res$hr,2)," (",round(res$hr.low,2),", ",round(res$hr.high,2),")",sep="")
+   
+   res$eff = 1-res$hr
+   res$eff.high = 1-res$hr.low
+   res$eff.low = 1-res$hr.high
+   res$model.effectiveness = paste(round(res$eff,2)," (",round(res$eff.low,2),", ",round(res$eff.high,2),")",sep="")
+ 
+   modtab = res[,c("model.betas","model.hr","model.effectiveness")]
+   names(modtab) = c("Beta","HR","1-HR")
+   print(xtable(modtab),include.rownames=TRUE,file = paste(dir.name,"cox_output.tex",sep="/"), compress = FALSE)
+   print("Model output has been saved (TeX).")  
+   
+   #4. Closing sequence
+   time.end = as.character(Sys.time())
+   model.spent = difftime(time.end,time.start)
+   print("The procedure is finished in following time:")
+   print(model.spent)
+   
+   #4.1 Saving model run stats
+   run.overview = list()
+   run.overview[["user"]] = user
+   run.overview[["computer"]] = computer
+   run.overview[["arguments"]] = args
+   run.overview[["time.start"]] = time.start
+   run.overview[["time.end"]] = time.end
+   run.overview[["model.spent"]] = model.spent
+   run.overview[["model.concordance"]] = cox$concordance['concordance']
+   run.overview[["convertool.vignette"]] = convertool.vignette
+   
+   res$model.concordance = run.overview[["model.concordance"]]
+   res$model.ctool.version = run.overview[["convertool.vignette"]][1]
+   res$model.age.filter = run.overview[["convertool.vignette"]][4]
+   res$model.input.file = run.overview[["convertool.vignette"]][7]
+   res$model.input.horizon = run.overview[["convertool.vignette"]][5]
+   res$model.mode = f.input.id
+   res$model.calculated.at = time.end
+   
+   write.csv(res,file=paste(dir.name,"model_data.csv",sep="/"),row.names=FALSE)
+ 
+   sink(paste(dir.name,"model_run_overview.txt",sep="/"))
+   print(run.overview)
+   sink()
+ 
+   #4.2 Saving environment image (without the most heavy items)
+   rm(mtab,cox)
+   save(list=ls(), file=paste(dir.name,"environment.Rdata",sep="/"),compress=TRUE,compression_level=9)
+   print("Workspace image and log have been saved.")
+   print("https://www.youtube.com/watch?v=g3ENX3aHlqU")
+   
+   } else {
+     stop("Data input has not been provided, goodbye")
+     print(data.input)
+   }
[1] "Inputs have been provided."
[1] "I am using file: ../data/temp/FebOmicron30.csv"
[1] "...and Cox formula: Surv(T1,T2,Infected) ~ InfPrior + VaccStatus + AgeGr + Sex"
[1] "I can see a convertool log provided."
[1] "The directory already exists, files will be rewritten."
[1] "The input file has been loaded, its properties have been saved. Proceeding to Cox model."
Call:
coxph(formula = Surv(T1, T2, Infected) ~ InfPrior + VaccStatus + 
    AgeGr + Sex, data = mtab)

  n= 2747112, number of events= 59092 

                                coef  exp(coef)   se(coef)       z Pr(>|z|)    
InfPriorinf_NA_001-060    -7.4261691  0.0005955  0.5773761 -12.862  < 2e-16 ***
InfPriorinf_NA_061-090    -1.6303828  0.1958546  0.0625028 -26.085  < 2e-16 ***
InfPriorinf_NA_091-120    -1.4349241  0.2381334  0.1304083 -11.003  < 2e-16 ***
InfPriorinf_NA_121-150    -1.4717014  0.2295346  0.2294941  -6.413 1.43e-10 ***
InfPriorinf_NA_151-180    -1.8813497  0.1523843  0.2582786  -7.284 3.24e-13 ***
InfPriorinf_NA_181+       -1.2419938  0.2888078  0.0181740 -68.339  < 2e-16 ***
VaccStatusboost_001-030   -1.5519749  0.2118292  0.0282612 -54.915  < 2e-16 ***
VaccStatusboost_031-060   -1.3630846  0.2558703  0.0362578 -37.594  < 2e-16 ***
VaccStatusboost_061+      -0.9922178  0.3707535  0.0478504 -20.736  < 2e-16 ***
VaccStatusfull_001-030    -1.2943567  0.2740741  0.0417102 -31.032  < 2e-16 ***
VaccStatusfull_031-060    -1.2817758  0.2775440  0.0355018 -36.105  < 2e-16 ***
VaccStatusfull_061-090    -1.3826230  0.2509195  0.0283836 -48.712  < 2e-16 ***
VaccStatusfull_091+       -0.6521448  0.5209273  0.0101479 -64.264  < 2e-16 ***
VaccStatuspartial_001-030 -0.9487245  0.3872346  0.0455830 -20.813  < 2e-16 ***
VaccStatuspartial_031+    -0.6874165  0.5028735  0.0722806  -9.510  < 2e-16 ***
AgeGr0-11                 -0.6222757  0.5367217  0.0173017 -35.966  < 2e-16 ***
AgeGr12-15                 0.3226445  1.3807744  0.0191205  16.874  < 2e-16 ***
AgeGr16-17                 0.3750873  1.4551184  0.0253514  14.796  < 2e-16 ***
AgeGr18-24                 0.0270283  1.0273968  0.0193677   1.396   0.1629    
AgeGr25-29                -0.2144483  0.8069866  0.0209735 -10.225  < 2e-16 ***
AgeGr30-34                -0.1557164  0.8558019  0.0197927  -7.867 3.62e-15 ***
AgeGr35-39                -0.0511745  0.9501128  0.0191088  -2.678   0.0074 ** 
AgeGr45-49                -0.0036936  0.9963133  0.0184644  -0.200   0.8415    
AgeGr50-54                -0.2484203  0.7800320  0.0211486 -11.746  < 2e-16 ***
AgeGr55-59                -0.4549452  0.6344828  0.0227905 -19.962  < 2e-16 ***
AgeGr60-64                -0.7719331  0.4621189  0.0261720 -29.495  < 2e-16 ***
AgeGr65-69                -1.0520427  0.3492237  0.0283682 -37.085  < 2e-16 ***
AgeGr70-74                -1.2157132  0.2964985  0.0318213 -38.204  < 2e-16 ***
AgeGr75-79                -1.1587648  0.3138736  0.0371019 -31.232  < 2e-16 ***
AgeGr80+                  -1.2043740  0.2998797  0.0349362 -34.473  < 2e-16 ***
SexM                      -0.1279694  0.8798803  0.0082520 -15.508  < 2e-16 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

                          exp(coef) exp(-coef) lower .95 upper .95
InfPriorinf_NA_001-060    0.0005955  1679.3617  0.000192  0.001846
InfPriorinf_NA_061-090    0.1958546     5.1058  0.173273  0.221379
InfPriorinf_NA_091-120    0.2381334     4.1993  0.184424  0.307485
InfPriorinf_NA_121-150    0.2295346     4.3566  0.146387  0.359910
InfPriorinf_NA_151-180    0.1523843     6.5624  0.091853  0.252806
InfPriorinf_NA_181+       0.2888078     3.4625  0.278701  0.299281
VaccStatusboost_001-030   0.2118292     4.7208  0.200415  0.223894
VaccStatusboost_031-060   0.2558703     3.9082  0.238318  0.274715
VaccStatusboost_061+      0.3707535     2.6972  0.337563  0.407207
VaccStatusfull_001-030    0.2740741     3.6486  0.252560  0.297421
VaccStatusfull_031-060    0.2775440     3.6030  0.258888  0.297544
VaccStatusfull_061-090    0.2509195     3.9853  0.237342  0.265274
VaccStatusfull_091+       0.5209273     1.9197  0.510669  0.531392
VaccStatuspartial_001-030 0.3872346     2.5824  0.354139  0.423423
VaccStatuspartial_031+    0.5028735     1.9886  0.436449  0.579408
AgeGr0-11                 0.5367217     1.8632  0.518826  0.555234
AgeGr12-15                1.3807744     0.7242  1.329987  1.433501
AgeGr16-17                1.4551184     0.6872  1.384584  1.529246
AgeGr18-24                1.0273968     0.9733  0.989128  1.067147
AgeGr25-29                0.8069866     1.2392  0.774486  0.840851
AgeGr30-34                0.8558019     1.1685  0.823239  0.889653
AgeGr35-39                0.9501128     1.0525  0.915187  0.986372
AgeGr45-49                0.9963133     1.0037  0.960902  1.033030
AgeGr50-54                0.7800320     1.2820  0.748360  0.813044
AgeGr55-59                0.6344828     1.5761  0.606765  0.663467
AgeGr60-64                0.4621189     2.1639  0.439012  0.486442
AgeGr65-69                0.3492237     2.8635  0.330337  0.369191
AgeGr70-74                0.2964985     3.3727  0.278571  0.315580
AgeGr75-79                0.3138736     3.1860  0.291859  0.337548
AgeGr80+                  0.2998797     3.3347  0.280033  0.321133
SexM                      0.8798803     1.1365  0.865764  0.894227

Concordance= 0.719  (se = 0.001 )
Likelihood ratio test= 37907  on 31 df,   p=<2e-16
Wald test            = 26980  on 31 df,   p=<2e-16
Score (logrank) test = 33799  on 31 df,   p=<2e-16

[1] "Model charts have been generated."
[1] "Model output has been saved (TXT)."
[1] "Model output has been saved (TeX)."
[1] "The procedure is finished in following time:"
Time difference of 2.316667 mins
[1] "Workspace image and log have been saved."
[1] "https://www.youtube.com/watch?v=g3ENX3aHlqU"
> 
